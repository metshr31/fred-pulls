name: FRED Bulk Pull (Full) â€“ Test

on:
  workflow_dispatch:

permissions:
  contents: read

concurrency:
  group: fred-bulk-test
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    env:
      PYTHONUNBUFFERED: "1"
      PYTHONFAULTHANDLER: "1"
      MPLBACKEND: Agg
      SAVE_PATH: outputs

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          set -euo pipefail
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          else
            pip install fredapi pandas numpy openpyxl xlsxwriter statsmodels scipy
          fi

      - name: Prepare outputs dir
        run: |
          rm -rf outputs
          mkdir -p outputs

      - name: Show repo layout (debug)
        run: |
          echo "PWD: $(pwd)"
          ls -lah
          echo "Python files:"
          find . -maxdepth 2 -type f -name "*.py" -print

      - name: Verify full bulk script exists
        run: |
          test -f pull_fred_series_bulk_split_pivot_adaptive.py || { echo "ERROR: script not found"; exit 1; }

      - name: Run full bulk pull
        env:
          FRED_API_KEY: ${{ secrets.FRED_API_KEY }}
        run: |
          set -euo pipefail
          echo "Running full bulk pull with SAVE_PATH=${SAVE_PATH}"
          python pull_fred_series_bulk_split_pivot_adaptive.py
          echo "After run, tree:"
          ls -lah

      - name: Collect report into outputs
        run: |
          set -euo pipefail
          if [ -f "fred_series_2019base.xlsx" ]; then
            echo "Moving fred_series_2019base.xlsx into outputs/"
            mv fred_series_2019base.xlsx outputs/
          fi
          echo "Contents of outputs/:"
          ls -lah outputs || true

      - name: Upload outputs (artifact)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: fred-bulk-test-output
          path: outputs/**
          if-no-files-found: warn

      - name: Debug dump on failure
        if: failure()
        run: |
          echo "==== DEBUG DUMP BEGIN ===="
          find . -maxdepth 3 -type f -printf "%p\t%k KB\n" | sort || true
          echo "--- outputs/ ---"
          ls -lah outputs || true
          echo "Package versions:"
          python -c "import sys; print(sys.version)"
          python -c "import pandas as m; print('pandas', getattr(m,'__version__','unknown'))" || true
          python -c "import numpy as m; print('numpy', getattr(m,'__version__','unknown'))" || true
          python -c "import fredapi as m; print('fredapi', getattr(m,'__version__','unknown'))" || true
          python -c "import openpyxl as m; print('openpyxl', getattr(m,'__version__','unknown'))" || true
          python -c "import xlsxwriter as m; print('xlsxwriter', getattr(m,'__version__','unknown'))" || true
          python -c "import statsmodels as m; print('statsmodels', getattr(m,'__version__','unknown'))" || true
          python -c "import scipy as m; print('scipy', getattr(m,'__version__','unknown'))" || true
          echo "==== DEBUG DUMP END ===="
